(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{167:function(t,a,e){"use strict";e.r(a);var i=e(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"架构协议类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#架构协议类","aria-hidden":"true"}},[t._v("#")]),t._v(" 架构协议类")]),e("h3",{attrs:{id:"尝试使用spdy和http2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#尝试使用spdy和http2","aria-hidden":"true"}},[t._v("#")]),t._v(" 尝试使用SPDY和HTTP2")]),e("p",[t._v("在条件允许的情况下可以考虑使用SPDY协议来进行文件资源传输，利用链接复用加快传输过程，缩短资源加载时间，HTTP2在未来也是可以尝试的。")]),e("h3",{attrs:{id:"使用后端数据渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用后端数据渲染","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用后端数据渲染")]),e("p",[t._v("使用后端数据渲染的方式可以加快页面内容的渲染展示，避免空白页面的出现，同时可以解决移动端SEO的问题，如果条件允许，后端数据渲染是一个不错的思路。")]),e("h3",{attrs:{id:"使用native-view代替dom的性能劣势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用native-view代替dom的性能劣势","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用Native View代替DOM的性能劣势")]),e("p",[t._v("可以尝试使用Native View的 MNV* 开发模式来避免HTML DOM性能慢的问题，目前使用 MNV* 的开发模式已经可以将页面内容渲染体验坐到接近客户端Native应用的体验了。")])])}],!1,null,null,null);r.options.__file="6.md";a.default=r.exports}}]);